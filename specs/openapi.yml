openapi: 3.0.3
info:
  title: CommandK API documentation
  version: 0.1.0
paths:
  "/apps/{catalog-app-id}/secrets/rendered":
    get:
      tags:
        - sdk
      summary: Get rendered secrets for an app in an environment
      operationId: getRenderedAppSecrets
      parameters:
        - $ref: "#/components/parameters/IfNoneMatch"
        - $ref: "#/components/parameters/CatalogAppId"
        - $ref: "#/components/parameters/EnvironmentIdQueryParam"
        - $ref: "#/components/parameters/RenderingModeParam"
      responses:
        "200":
          description: Rendered secrets for the app in the requested environment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenderedAppSecretsResponse"
  /environments:
    get:
      tags:
        - sdk
      summary: List all environments
      operationId: getEnvironments
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Before"
        - $ref: "#/components/parameters/After"
      responses:
        "200":
          description: List of all environments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllEnvironmentsResponse"
components:
  parameters:
    IfNoneMatch:
      in: header
      name: if-none-match
      required: false
      schema:
        type: string
    CatalogAppId:
      in: path
      name: catalog-app-id
      required: true
      schema:
        type: string
    EnvironmentIdQueryParam:
      in: query
      name: environment
      required: true
      schema:
        type: string
      description: Identifier of the environment
    RenderingModeParam:
      in: query
      name: mode
      required: true
      schema:
        $ref: "#/components/schemas/RenderingMode"
      description: Rendering mode
    Limit:
      in: query
      name: limit
      schema:
        type: integer
      description: Number of items to return
    Before:
      in: query
      name: before
      schema:
        type: string
      description: UUID of the item before which the items are needed (for supporting
        the back use-case)
    After:
      in: query
      name: after
      schema:
        type: string
      description: UUID of the item after which the items are needed (for supporting
        the next use-case)
  schemas:
    RenderedAppSecretsResponse:
      allOf:
        - allOf:
            - $ref: "#/components/schemas/CommonDescriptorDoc"
            - type: object
              required:
                - changelogId
                - secretDigest
                - incrementalId
              properties:
                changelogId:
                  type: string
                secretDigest:
                  type: string
                incrementalId:
                  type: integer
                  format: int64
        - type: object
          required:
            - secrets
          properties:
            secrets:
              type: array
              items:
                $ref: "#/components/schemas/RenderedAppSecret"
    GetAllEnvironmentsResponse:
      type: object
      required:
        - environments
      properties:
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentDescriptor"
    RenderingMode:
      type: string
      enum:
        - Full
        - PreviewOnly
    CommonDescriptorDoc:
      description: >
        - Descriptors for an entity are top-level identifiers and properties for
        that entity

        - It is helpful in views where the entity has to be listed without granular details

        - Maybe helpful in preventing over-fetching of data
    RenderedAppSecret:
      type: object
      required:
        - key
        - valueType
        - secretId
      properties:
        key:
          type: string
        serializedValue:
          type: string
        valueType:
          $ref: "#/components/schemas/RenderedAppSecretValueType"
        secretId:
          type: string
    EnvironmentDescriptor:
      allOf:
        - $ref: "#/components/schemas/CommonDescriptorDoc"
        - type: object
          required:
            - id
            - slug
            - name
            - label
          properties:
            id:
              type: string
            slug:
              type: string
            name:
              type: string
            label:
              type: string
    RenderedAppSecretValueType:
      type: string
      enum:
        - urn:rendered-app-secret:value-type:String
        - urn:rendered-app-secret:value-type:None
